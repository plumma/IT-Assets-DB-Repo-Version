@model IEnumerable<ITAssetsDatabase.Web.ViewModels.Assets.AssetsViewModel>

@{
    ViewBag.Title = "Index";
}

.<style>

.grayout {
    opacity: 0.6; /* Real browsers */
    filter: alpha(opacity = 60); /* MSIE */
    pointer-events: none;
   cursor: default;
}


.confbuttons td {

            padding-top:15px;
     }

</style>

@helper AlternateBackground(string color)
{
    if (ViewBag.count == null) { ViewBag.count = 0; }
    <text>style="background-color:@(ViewBag.count % 2 == 1 ? color : "#FFFFFF")"</text>
    ViewBag.count++;
}



<p>
    @Html.ActionLink("Create New", "Register")
</p>
<table>
    @*<tr style="background-color:#6c254a;color:white;font-weight:bold">*@
    <tr class="TableHeader">

        <td style="text-align:center;width:60px;border:solid;border-width:1px;border-color:white;width:20px">Logged</td>
        <td style="width:110px;border:solid;border-width:1px;border-color:white;width:140px">End User</td>
        <td style="width:70px;border:solid;border-width:1px;border-color:white">Helpdesk Ref</td>
        <td style="border:solid;border-width:1px;border-color:white">@Html.DisplayNameFor(model => model.Type)</td>
        <td style="width:100px;border:solid;border-width:1px;border-color:white;width:80px">@Html.DisplayNameFor(model => model.Make)</td>
        <td style="border:solid;border-width:1px;border-color:white">@Html.DisplayNameFor(model => model.Model)</td>
        <td style="width:160px;border:solid;border-width:1px;border-color:white;width:90px">@Html.DisplayNameFor(model => model.Status)</td>
        <td style="border:solid;border-width:1px;border-color:white;width:170px">Action</td>



        @foreach (var item in Model)
        {
        <tr @AlternateBackground("#F1F1F1")>
            <td>
                @Html.DisplayFor(modelItem => item.CreateDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndUserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HelpdeskRef)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Make)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Model)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id })|
                @Html.ActionLink("Details", "Details", new { id = item.Id })|
                <a class="ConfirmDelete" id=@item.Id href="#/">Delete</a>
                </td>
            
            </tr>
            <tr class="confbuttons" id="Append_@item.Id"></tr>
        @*@Html.ActionLink("Delete", "Delete", new { id = item.Id })*@
        }

   

    </table>


@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/themes/base/css")   @* Allows Background to go grey in Modal*@
    <link href="~/Content/themes/base/jquery.ui.autocomplete.css" rel="stylesheet" />
    <script src="~/Scripts/Autosize/jquery.autosize.min.js"></script>
    <script src="~/Scripts/Autosize/jquery.autosize.js"></script>
    

    <script>
        $(document).ready(function () {

            $(".ConfirmDelete").click(function (e) {
                    
                    $(this).closest('tr').addClass('active');
                    
                    $('table tbody').each(function () {
                    $(this).find('tr').each(function ()

                    {
                        var rowclass = $(this).attr("class");
                        if ( !(rowclass == "active" || rowclass == "confbuttons" || rowclass == "TableHeader"))
                        $(this).addClass('grayout');
                    }

                    )
                });
           

                var asset = this.id;

                var mydata = '<td colspan=' + '"8"><b>Are you sure you want to delete this record?</b> <br /><button id=' +
                             '"yes"' + ' class=' + '"button">Yes</button><button id=' +
                              '"no"' + ' class=' + '"button">No</button><hr /></td>' +
                              '<input type=' + '"hidden"' + 'id=' + '"assetid"' + ' value="' + asset + '"/>';


                $("#Append_" + asset).empty().append(mydata);
            });

        });


        // .on Adds functionality to Dynamic content, .live() now deprecated

        $(document).on('click', 'button', function (e) {

            var buttonpressed = $(this).attr("id");
            
            if ( buttonpressed == "yes")
            {
                var id = $('#assetid').val();

                $.ajax({
                    url: "/Assets/ConfirmDelete",
                    data:{ id : id},
                    async: true
                }).success(
                    function () {
                        window.location = 'assets';
                    }
                );

            }
                        
        else{
                $(this).closest('tr').empty();
                 
                $('table tbody tr').each(function () {
                    $(this).removeClass('grayout')
                    $(this).removeClass('active')
                });

            }

        });

    


    
 </script>

}

